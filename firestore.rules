rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 프로필 규칙
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read, write: if request.auth != null && isAdmin();
    }
    
    // 상품 규칙
    match /products/{productId} {
      allow read: if true; // 모든 사용자가 상품을 볼 수 있음
      allow write: if request.auth != null && isAdmin();
    }
    
    // 구매 내역 규칙
    match /purchases/{purchaseId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.userId || isAdmin());
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
    }
    
    // 관리자 권한 규칙
    match /admins/{adminId} {
      allow read, write: if request.auth != null && isAdmin();
    }
    
    // 관리자 지갑 주소 규칙
    match /settings/{docId} {
      allow read: if request.auth != null; // 로그인한 유저는 모두 읽기 가능
      allow write: if request.auth != null && isAdmin(); // 쓰기는 여전히 관리자만
      }
    
    // 관리자 권한 확인 함수
    function isAdmin() {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          userDoc.data.role != null &&
          userDoc.data.role == 'admin';
      }

    // 결제 내역 규칙
    match /payments/{docId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && (
        resource.data.user == request.auth.uid || isAdmin()
      );
    }
  }
}

import { Buffer } from 'buffer';

if (!window.Buffer) {
  window.Buffer = Buffer;
}